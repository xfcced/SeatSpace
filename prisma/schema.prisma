generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comment {
  id            Int             @id @default(autoincrement())
  show_id       Int?
  seat_id       Int?
  content       String?
  rating_seat   Float?          @default(0)
  rating_show   Float?          @default(0)
  create_time   DateTime?       @default(now()) @db.Timestamp(6)
  seat          seat?           @relation(fields: [seat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  show          show?           @relation(fields: [show_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comment_image comment_image[]
}

model hall {
  id          Int       @id @default(autoincrement())
  theater_id  Int
  name        String    @db.VarChar(255)
  create_time DateTime? @default(now()) @db.Timestamp(6)
  theater     theater   @relation(fields: [theater_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  seat        seat[]
  show        show[]
  zone        zone[]
}

model image {
  id            Int                @id @default(autoincrement())
  object_id     Int?
  object_type   rating_object_type
  name          String             @db.VarChar(255)
  path          String             @db.VarChar(255)
  create_time   DateTime           @default(now()) @db.Timestamp(6)
  show          show?              @relation(fields: [object_id], references: [id], map: "image_object_id_show_fkey")
  theater       theater?           @relation(fields: [object_id], references: [id], map: "image_object_id_theater_fkey")
  seat          seat?              @relation(fields: [object_id], references: [id], map: "image_object_id_seat_fkey")
  comment_image comment_image[]
  origin_name   String?            @default("default_image_name") @db.VarChar(255)
}

model rating {
  id             Int                @id @default(autoincrement())
  object_id      Int
  rating_sum     Float              @default(0)
  rating_count   Int                @default(0)
  object_type    rating_object_type
  current_rating Float?             @default(0)
  create_time    DateTime?          @default(now()) @db.Timestamp(6)
  show           show?              @relation(fields: [object_id], references: [id], map: "rating_object_id_show_fkey")
  theater        theater?           @relation(fields: [object_id], references: [id], map: "rating_object_id_theater_fkey")
  seat           seat?              @relation(fields: [object_id], references: [id], map: "rating_object_id_seat_fkey")
}

model seat {
  id          Int       @id @default(autoincrement())
  hall_id     Int?
  row_no      Int
  seat_no     Int
  create_time DateTime? @default(now()) @db.Timestamp(6)
  comment     comment[]
  hall        hall?     @relation(fields: [hall_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  image       image[]
  zone_id     Int       @default(0)
  zone        zone?     @relation(fields: [zone_id], references: [id])
  rating      rating[]
}

model show {
  id          Int       @id @default(autoincrement())
  theater_id  Int?
  hall_id     Int?
  name        String    @db.VarChar(255)
  start_time  DateTime? @default(now()) @db.Timestamp(0)
  description String?
  create_time DateTime? @default(now()) @db.Timestamp(6)
  comment     comment[]
  hall        hall?     @relation(fields: [hall_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  theater     theater?  @relation(fields: [theater_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  image       image[]
  rating      rating[]
}

model theater {
  id          Int                  @id @default(autoincrement())
  name        String               @db.VarChar(50)
  description String
  address     String
  coordinate  Unsupported("point")
  create_time DateTime             @default(now()) @db.Timestamp(6)
  hall        hall[]
  show        show[]
  image       image[]
  rating      rating[]
}

enum rating_object_type {
  show
  theater
  seat
}

model zone {
  id            Int       @id @default(autoincrement())
  hall_id       Int?
  zone_offset_x Int?      @default(0)
  zone_offset_y Int?      @default(0)
  rotation      Float?    @default(0)
  create_time   DateTime? @default(now()) @db.Timestamp(6)
  seat          seat[]
  hall          hall?     @relation(fields: [hall_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model comment_image {
  id          Int       @id @default(autoincrement())
  comment_id  Int
  image_id    Int
  sequence    Int       @default(0)
  create_time DateTime? @default(now()) @db.Timestamp(6)
  comment     comment?  @relation(fields: [comment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  image       image?    @relation(fields: [image_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
